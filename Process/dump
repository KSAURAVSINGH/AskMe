// Function to create the context menu item
function createContextMenu() {
    chrome.contextMenus.create({
      id: 'AskMeTag',
      title: 'AskMe',
      contexts: ['selection']
    });
  }
createContextMenu();

chrome.tabs.executeScript(null, {
  code: "alert(window.getSelection().toString());"
})

document.getElementById("button-clicked").addEventListener("click", function () {
  var selectedText = window.getSelection().toString();
  if (selectedText) {
    // Handle the selected text here
    const buttonEl = document.getElementById("button-clicked");
    buttonEl.innerHTML = selectedText;
    alert("Selected text:", selectedText);
  }
  alert("No text selected");
});

const dataEl = document.getElementById("response-data");
dataEl.innerHTML = "Not updated";
// alert("Outside the action")















// chrome.action.onClicked.addListener((tab) => {
//   chrome.scripting.executeScript({
//     target: {tabId: tab.id},
//     files: ['background.js']
//   });
//   dataEl.innerHTML = tab.id;
//   alert("Inside the action")
// });




// Get the selected text
// function getSelectedText() {
//     const selection = window.getSelection();
//     return selection ? selection.toString() : null;
//   }
  
  // Example usage

  // const selectedText = getSelectedText();
  // dataEl.innerHTML = selectedText;

  // if (selectedText) {    
  //   dataEl.innerHTML = selectedText;
  // } else {
  //   dataEl.innerHTML = "No text selected.";
  // }

// const dataEl = document.getElementById("response-data");
// dataEl.innerHTML = info.selectionText;

// Listen for clicks on the context menu item
chrome.contextMenus.onClicked.addListener(function(info, tab) {
    if (info.menuItemId === 'AskMeTag') {
        // Do something with the selected text
        // const dataEl = document.getElementById("response-data");
        // dataEl.innerHTML = info.selectionText;
        console.log("Selected text:")
        chrome.runtime.sendMessage({ type: "menuItemClick" });
        chrome.runtime.onMessage.addListener((message) => {
          if (message.type === "menuItemClick") {
            // Handle the context menu item click here
            // You can trigger your extension's functionality
            alert('Extension got triggered');
          }
        });
        alert('Selected text: ' + info.selectionText);
    }
  });

  

  // chrome.runtime.onMessage.addListener((message) => {
  //   if (message.type === "menuItemClick") {
  //     // Handle the context menu item click here
  //     // You can trigger your extension's functionality
  //     alert('Extension got triggered');
  //   }
  // });
  
  
// content.js

// chrome.scripting.executeScript({
//   target: { tabId: tab.id },
//   function: (text) => {
//     const selectedText = document.getSelection().toString().trim();
//     console.log('Selected text:', selectedText);
//     chrome.runtime.sendMessage({ type: 'selectedText', text: selectedText });
//   },
// });

// chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
//   if (message.type === 'selectedText') {
//     const selectedText = message.text;

//     // Do something with the selected text
//     console.log('Selected text:', selectedText);
//     dataEl.innerHTML = selectedText;
//   }
// });


#popup-body {
  width: 300px; /* Set the desired width */
  height: 200px; /* Set the desired height */
  background-color: #f0f0f0; /* Change the background color as needed */
  border: 1px solid #ccc; /* Add a border if desired */
  padding: 10px; /* Add padding for content */
  box-sizing: border-box; /* Include padding and border in the total width/height */
}


<!DOCTYPE html>
<html lang="en">
<head>
    <script src="jquery-1.8.3.min.js"></script>
    <script  src="scripts/popup.js"></script>
    <link rel="stylesheet" type="text/css" href="styles/popup.css"> 
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>AskMe</title>
</head>
<body>
    <div id="popup-body">
        <div class="scrollable-paragraph">
            <!-- <textarea rows="5" cols="40" maxlength="500" id="output"></textarea> -->
            <p id="output"></p>
        </div>    
    </div>
</body>
</html>


font-family: source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif;